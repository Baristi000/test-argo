apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-test
  namespace: cicd

---
apiVersion: v1
kind: Secret
metadata:
  name: argo-test
  namespace: cicd
  annotations:
    kubernetes.io/service-account.name: argo-test
type: kubernetes.io/service-account-token

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: cicd
  name: argo-test-cr
rules:
- apiGroups: ["rbac.authorization.k8s.io"]  # RBAC API group
  resources: 
    - clusterroles
    - clusterrolebindings
    - roles
    - rolebindings
  verbs: ["*"] 
- apiGroups: [""]
  resources: 
    # - namespaces
    # - nodes
    - secrets
    - serviceaccounts
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-secrets-global
subjects:
- kind: ServiceAccount
  name: argo-test
  namespace: cicd
roleRef:
  kind: ClusterRole
  name: argo-test-cr
  apiGroup: ""

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: cicd
  name: pod-reader
rules:
- apiGroups: ["apps"]
  resources:
    - pods
    - deployments
    - replicasets
  verbs: ["get", "watch", "list", "create", "update"]
# - apiGroups: [""]
#   resources:
#     - secrets
#   verbs: ["create", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: cicd
subjects:
- kind: ServiceAccount
  name: argo-test
  namespace: cicd
- kind: ServiceAccount
  name: argo-test
  namespace: develop
roleRef:
  kind: Role 
  name: pod-reader 
  apiGroup: rbac.authorization.k8s.io
